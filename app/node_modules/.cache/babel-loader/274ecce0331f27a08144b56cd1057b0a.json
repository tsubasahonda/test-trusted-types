{"ast":null,"code":"import _slicedToArray from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/src/App.tsx\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './App.css';\nimport { getPolicy } from './utils';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        hrefText = _useState2[0],\n        setHrefText = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        href = _useState4[0],\n        setHref = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        untrustedHrefText = _useState6[0],\n        setUntrustedHrefText = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        untrustedHref = _useState8[0],\n        setUntrustedHref = _useState8[1];\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/xss-hacky1?html=<img%20src=%27x%27%20onerror=\\\"alert(1)\\\"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Xss 1\")), React.createElement(\"a\", {\n    href: getPolicy().createURL('/xss-hacky2?html=<img%20src=%27x%27%20onerror=\"alert(1)\"'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Xss 2\")), React.createElement(\"a\", {\n    href: getPolicy().createURL('/xss-hacky3?html=<img%20src=%27x%27%20onerror=\"alert(1)\"'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Xss 3\")), React.createElement(\"a\", {\n    href: getPolicy().createURL('/xss-hacky4?html=<img%20src=%27x%27%20onerror=\"alert(1)\"'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Xss 4\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, href && React.createElement(Link, {\n    to: getPolicy().createURL(href),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Link with trusted href\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: hrefText,\n    onChange: e => setHrefText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setHref(hrefText),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Set href\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, untrustedHref && React.createElement(\"a\", {\n    href: untrustedHref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Link with NON trusted href\"), React.createElement(\"input\", {\n    type: \"text\",\n    value: untrustedHrefText,\n    onChange: e => setUntrustedHrefText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setUntrustedHref(untrustedHrefText),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Set untrusted href\")))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/myaaaicey/Documents/playground/test-trusted-types/app/src/App.tsx"],"names":["React","useState","BrowserRouter","Router","Link","getPolicy","App","hrefText","setHrefText","href","setHref","untrustedHrefText","setUntrustedHrefText","untrustedHref","setUntrustedHref","createURL","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;AACA,OAAO,WAAP;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA,oBACML,QAAQ,CAAC,EAAD,CADd;AAAA;AAAA,QACnBM,QADmB;AAAA,QACTC,WADS;;AAAA,qBAEFP,QAAQ,CAAC,EAAD,CAFN;AAAA;AAAA,QAEnBQ,IAFmB;AAAA,QAEbC,OAFa;;AAAA,qBAGwBT,QAAQ,CAAC,EAAD,CAHhC;AAAA;AAAA,QAGnBU,iBAHmB;AAAA,QAGAC,oBAHA;;AAAA,qBAIgBX,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAInBY,aAJmB;AAAA,QAIJC,gBAJI;;AAM1B,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,4DAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE;AAAG,IAAA,IAAI,EAAET,SAAS,GAAGU,SAAZ,CAAsB,0DAAtB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAJF,EAOE;AAAG,IAAA,IAAI,EAAEV,SAAS,GAAGU,SAAZ,CAAsB,0DAAtB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAPF,EAUE;AAAG,IAAA,IAAI,EAAEV,SAAS,GAAGU,SAAZ,CAAsB,0DAAtB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAVF,CADF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,IAAI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEJ,SAAS,GAAGU,SAAZ,CAAsBN,IAAtB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADX,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,QAFT;AAGE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,OAAO,EAAE,MAAMR,OAAO,CAACH,QAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,aAAa,IAAI;AAAG,IAAA,IAAI,EAAEA,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADpB,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEF,iBAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,oBAAoB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACH,iBAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CAVF,CAfF,CADF,CADF;AAwCD,CA9CD;;AAgDA,eAAeL,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './App.css';\nimport { getPolicy } from './utils';\n\nconst App: React.FC = () => {\n  const [hrefText, setHrefText] = useState('');\n  const [href, setHref] = useState('');\n  const [untrustedHrefText, setUntrustedHrefText] = useState(\"\");\n  const [untrustedHref, setUntrustedHref] = useState(\"\");\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n          <a href='/xss-hacky1?html=<img%20src=%27x%27%20onerror=\"alert(1)\"'>\n            <button>Xss 1</button>\n          </a>\n          <a href={getPolicy().createURL('/xss-hacky2?html=<img%20src=%27x%27%20onerror=\"alert(1)\"')}>\n            <button>Xss 2</button>\n          </a>\n          <a href={getPolicy().createURL('/xss-hacky3?html=<img%20src=%27x%27%20onerror=\"alert(1)\"')}>\n            <button>Xss 3</button>\n          </a>\n          <a href={getPolicy().createURL('/xss-hacky4?html=<img%20src=%27x%27%20onerror=\"alert(1)\"')}>\n            <button>Xss 4</button>\n          </a>\n        </div>\n        <div>\n          <p>\n            {href && <Link to={getPolicy().createURL(href)}>Link with trusted href</Link>}\n            <input\n              type=\"text\"\n              value={hrefText}\n              onChange={(e) => setHrefText(e.target.value)}\n            />\n            <button onClick={() => setHref(hrefText)}>Set href</button>\n          </p>\n          <p>\n            {untrustedHref && <a href={untrustedHref}>Link with NON trusted href</a>}\n            <input\n              type=\"text\"\n              value={untrustedHrefText}\n              onChange={(e) => setUntrustedHrefText(e.target.value)}\n            />\n            <button onClick={() => setUntrustedHref(untrustedHrefText)}>Set untrusted href</button>\n          </p>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}