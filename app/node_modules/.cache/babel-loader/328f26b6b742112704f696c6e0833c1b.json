{"ast":null,"code":"import _defineProperty from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _possibleConstructorReturn from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n// TODO check attributes in safari, remove legacy safe handlers\nvar unsafeAttributeEventHandlers = ['onabort', 'onactivate', 'onactivateinvisible', 'onafterprint', 'onafterupdate', 'onanimationcancel', 'onanimationend', 'onanimationiteration', 'onanimationstart', 'onariarequest', 'onauxclick', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbegin', 'onblur', 'onbounce', 'oncancel', 'oncanplay', 'oncanplaythrough', 'oncellchange', 'onchange', 'onclick', 'onclose', 'oncommand', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncuechange', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragdrop', 'ondragend', 'ondragenter', 'ondragexit', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onend', 'onended', 'onerror', 'onerrorupdate', 'onexit', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onformdata', 'onfullscreenchange', 'onfullscreenerror', 'ongotpointercapture', 'onhelp', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadend', 'onloadstart', 'onlosecapture', 'onlostpointercapture', 'onmediacomplete', 'onmediaerror', 'onmessage', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onmozfullscreenchange', 'onmozfullscreenerror', 'onmscontentzoom', 'onmsgesturechange', 'onmsgesturedoubletap', 'onmsgestureend', 'onmsgesturehold', 'onmsgesturestart', 'onmsgesturetap', 'onmsgotpointercapture', 'onmsinertiastart', 'onmslostpointercapture', 'onmsmanipulationstatechanged', 'onmspointercancel', 'onmspointerdown', 'onmspointerenter', 'onmspointerleave', 'onmspointermove', 'onmspointerout', 'onmspointerover', 'onmspointerup', 'onoffline', 'ononline', 'onoutofsync', 'onoverscroll', 'onpaste', 'onpause', 'onplay', 'onplaying', 'onpointercancel', 'onpointerdown', 'onpointerenter', 'onpointerleave', 'onpointermove', 'onpointerout', 'onpointerover', 'onpointerrawupdate', 'onpointerup', 'onprogress', 'onpropertychange', 'onratechange', 'onreadystatechange', 'onrepeat', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onresume', 'onreverse', 'onrowdelete', 'onrowenter', 'onrowexit', 'onrowinserted', 'onscroll', 'onscrollend', 'onsearch', 'onseek', 'onseeked', 'onseeking', 'onselect', 'onselectionchange', 'onselectstart', 'onshow', 'onstalled', 'onstart', 'onstop', 'onstorage', 'onsubmit', 'onsuspend', 'onsynchrestored', 'ontimeerror', 'ontimeupdate', 'ontoggle', 'ontrackchange', 'ontransitioncancel', 'ontransitionend', 'ontransitionrun', 'ontransitionstart', 'onunload', 'onurlflip', 'onvolumechange', 'onwaiting', 'onwebkitanimationend', 'onwebkitanimationiteration', 'onwebkitanimationstart', 'onwebkitfullscreenchange', 'onwebkitfullscreenerror', 'onwebkittransitionend', 'onwheel'];\n/**\n * Returns an array of all event handlers. Some of the event handlers may be\n * supported only in some browsers.\n *\n * For every event type that the browser supports, SVG supports that as an event\n * attribute, following the same requirements as for HTML event attributes.\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/Events\n *\n * @return {!Array<string>}\n */\n\nfunction getUnsafeAttributeEventHandlers() {\n  if (typeof window !== 'undefined') {\n    var eventHandlers = [];\n\n    for (var name in HTMLElement.prototype) {\n      if (name.slice(0, 2) === 'on') {\n        eventHandlers.push(name);\n      }\n    }\n\n    return eventHandlers;\n  } else {\n    return unsafeAttributeEventHandlers;\n  }\n}\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n\nvar isBrowser = typeof window !== 'undefined';\n\nvar rejectInputFn = function rejectInputFn(s) {\n  throw new TypeError('undefined conversion');\n};\n\nvar rejectInputDefaultPolicyFn = function rejectInputDefaultPolicyFn(s) {\n  return null;\n};\n\nvar _String$prototype = String.prototype,\n    toLowerCase = _String$prototype.toLowerCase,\n    toUpperCase = _String$prototype.toUpperCase;\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar SVG_NS = 'http://www.w3.org/2000/svg';\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedURL} createURL\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\n\nvar TrustedTypePolicy = function TrustedTypePolicy() {\n  throw new TypeError('Illegal constructor');\n};\n/**\n * @constructor\n */\n\n\nvar TrustedTypePolicyFactory = function TrustedTypePolicyFactory() {\n  throw new TypeError('Illegal constructor');\n};\n/* eslint-enable no-unused-vars */\n\n\nvar DEFAULT_POLICY_NAME = 'default';\n\nvar trustedTypesBuilderTestOnly = function trustedTypesBuilderTestOnly() {\n  var _TYPE_MAP;\n\n  // Capture common names early.\n  var assign = Object.assign,\n      create = Object.create,\n      defineProperty = Object.defineProperty,\n      freeze = Object.freeze,\n      getOwnPropertyNames = Object.getOwnPropertyNames,\n      getPrototypeOf = Object.getPrototypeOf,\n      ObjectPrototype = Object.prototype;\n  var hasOwnProperty = ObjectPrototype.hasOwnProperty;\n  var _Array$prototype = Array.prototype,\n      forEach = _Array$prototype.forEach,\n      push = _Array$prototype.push;\n  var creatorSymbol = Symbol();\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n\n  var privates = function privates(obj) {\n    var v = privateMap.get(obj);\n\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n\n      privateMap.set(obj, v);\n    }\n\n    return v;\n  };\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n\n\n  function selfContained(collection) {\n    var proto = getPrototypeOf(collection);\n\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = getOwnPropertyNames(proto)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n        defineProperty(collection, key, {\n          value: collection[key]\n        });\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return collection;\n  }\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n\n\n  var privateMap = selfContained(new WeakMap());\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n\n  var policyNames = selfContained([]);\n  /**\n   * Allowed policy namess for policy names.\n   * @type {Array<string>}\n   */\n\n  var allowedNames = selfContained([]);\n  /**\n   * A reference to a default policy, if created.\n   * @type {TrustedTypePolicy}\n   */\n\n  var defaultPolicy = null;\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n\n  var enforceNameWhitelist = false;\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n\n  var TrustedType =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    function TrustedType(s, policyName) {\n      _classCallCheck(this, TrustedType);\n\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n\n      defineProperty(this, 'policyName', {\n        value: '' + policyName,\n        enumerable: true\n      });\n    }\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n\n\n    _createClass(TrustedType, [{\n      key: \"toString\",\n      value: function toString() {\n        return privates(this)['v'];\n      }\n      /**\n       * Returns the wrapped string value of the object.\n       * @return {string}\n       * @override\n       */\n\n    }, {\n      key: \"valueOf\",\n      value: function valueOf() {\n        return privates(this)['v'];\n      }\n    }]);\n\n    return TrustedType;\n  }();\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n\n\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {\n      value: canonName\n    });\n  }\n  /**\n   * Trusted URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n\n\n  var TrustedURL =\n  /*#__PURE__*/\n  function (_TrustedType) {\n    _inherits(TrustedURL, _TrustedType);\n\n    function TrustedURL() {\n      _classCallCheck(this, TrustedURL);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TrustedURL).apply(this, arguments));\n    }\n\n    return TrustedURL;\n  }(TrustedType);\n\n  lockdownTrustedType(TrustedURL, 'TrustedURL');\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n\n  var TrustedScriptURL =\n  /*#__PURE__*/\n  function (_TrustedType2) {\n    _inherits(TrustedScriptURL, _TrustedType2);\n\n    function TrustedScriptURL() {\n      _classCallCheck(this, TrustedScriptURL);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TrustedScriptURL).apply(this, arguments));\n    }\n\n    return TrustedScriptURL;\n  }(TrustedType);\n\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n\n  var TrustedHTML =\n  /*#__PURE__*/\n  function (_TrustedType3) {\n    _inherits(TrustedHTML, _TrustedType3);\n\n    function TrustedHTML() {\n      _classCallCheck(this, TrustedHTML);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TrustedHTML).apply(this, arguments));\n    }\n\n    return TrustedHTML;\n  }(TrustedType);\n\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n\n  var TrustedScript =\n  /*#__PURE__*/\n  function (_TrustedType4) {\n    _inherits(TrustedScript, _TrustedType4);\n\n    function TrustedScript() {\n      _classCallCheck(this, TrustedScript);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TrustedScript).apply(this, arguments));\n    }\n\n    return TrustedScript;\n  }(TrustedType);\n\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n  lockdownTrustedType(TrustedType, 'TrustedType'); // Common constants.\n\n  var emptyHTML = freeze(create(new TrustedHTML(creatorSymbol, '')));\n  privates(emptyHTML)['v'] = '';\n  /**\n   * A map of attribute / property names to allowed types\n   * for known namespaces.\n   * @type {!Object<string,!TrustedTypesTypeMap>}\n   * @export\n   */\n\n  var TYPE_MAP = (_TYPE_MAP = {}, _defineProperty(_TYPE_MAP, HTML_NS, {\n    // TODO(koto): Figure out what to to with <link>\n    'A': {\n      'attributes': {\n        'href': TrustedURL.name\n      }\n    },\n    'AREA': {\n      'attributes': {\n        'href': TrustedURL.name\n      }\n    },\n    'BASE': {\n      'attributes': {\n        'href': TrustedURL.name\n      }\n    },\n    'BUTTON': {\n      'attributes': {\n        'formaction': TrustedURL.name\n      }\n    },\n    'EMBED': {\n      'attributes': {\n        'src': TrustedScriptURL.name\n      }\n    },\n    'FORM': {\n      'attributes': {\n        'action': TrustedURL.name\n      }\n    },\n    'FRAME': {\n      'attributes': {\n        'src': TrustedURL.name\n      }\n    },\n    'IFRAME': {\n      'attributes': {\n        'src': TrustedURL.name,\n        'srcdoc': TrustedHTML.name\n      }\n    },\n    'INPUT': {\n      'attributes': {\n        'formaction': TrustedURL.name\n      }\n    },\n    'OBJECT': {\n      'attributes': {\n        'data': TrustedScriptURL.name,\n        'codebase': TrustedScriptURL.name\n      }\n    },\n    // TODO(koto): Figure out what to do with portals.\n    'SCRIPT': {\n      'attributes': {\n        'src': TrustedScriptURL.name,\n        'text': TrustedScript.name\n      },\n      'properties': {\n        'innerText': TrustedScript.name,\n        'textContent': TrustedScript.name,\n        'text': TrustedScript.name\n      }\n    },\n    '*': {\n      'attributes': {},\n      'properties': {\n        'innerHTML': TrustedHTML.name,\n        'outerHTML': TrustedHTML.name\n      }\n    }\n  }), _defineProperty(_TYPE_MAP, XLINK_NS, {\n    '*': {\n      'attributes': {\n        'href': TrustedURL.name\n      },\n      'properties': {}\n    }\n  }), _defineProperty(_TYPE_MAP, SVG_NS, {\n    '*': {\n      'attributes': {\n        'href': TrustedURL.name\n      },\n      'properties': {}\n    }\n  }), _TYPE_MAP);\n  /**\n   * A map of element property to HTML attribute names.\n   * @type {!Object<string, string>}\n   */\n\n  var ATTR_PROPERTY_MAP = {\n    'codebase': 'codeBase',\n    'formaction': 'formAction'\n  }; // Edge doesn't support srcdoc.\n\n  if (isBrowser && !('srcdoc' in HTMLIFrameElement.prototype)) {\n    delete TYPE_MAP[HTML_NS]['IFRAME']['attributes']['srcdoc'];\n  } // in HTML, clone attributes into properties.\n\n\n  for (var _i = 0, _Object$keys = Object.keys(TYPE_MAP[HTML_NS]); _i < _Object$keys.length; _i++) {\n    var tag = _Object$keys[_i];\n\n    if (!TYPE_MAP[HTML_NS][tag]['properties']) {\n      TYPE_MAP[HTML_NS][tag]['properties'] = {};\n    }\n\n    for (var _i2 = 0, _Object$keys2 = Object.keys(TYPE_MAP[HTML_NS][tag]['attributes']); _i2 < _Object$keys2.length; _i2++) {\n      var attr = _Object$keys2[_i2];\n      TYPE_MAP[HTML_NS][tag]['properties'][ATTR_PROPERTY_MAP[attr] ? ATTR_PROPERTY_MAP[attr] : attr] = TYPE_MAP[HTML_NS][tag]['attributes'][attr];\n    }\n  } // Add inline event handlers attribute names.\n\n\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = getUnsafeAttributeEventHandlers()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var name = _step2.value;\n      TYPE_MAP[HTML_NS]['*']['attributes'][name] = 'TrustedScript';\n      TYPE_MAP[SVG_NS]['*']['attributes'][name] = 'TrustedScript';\n    }\n    /**\n     * @type {!Object<string,!Function>}\n     */\n\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  var createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createURL': TrustedURL,\n    'createScript': TrustedScript\n  };\n  var createFunctionAllowed = createTypeMapping.hasOwnProperty;\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n\n  function isTrustedTypeChecker(type) {\n    return function (obj) {\n      return obj instanceof type && privateMap.has(obj);\n    };\n  }\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n\n\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      var method = innerPolicy[methodName] || (policyName == DEFAULT_POLICY_NAME ? rejectInputDefaultPolicyFn : rejectInputFn);\n      var policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n\n      var factory = _defineProperty({}, methodName, function (s) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // Trick to get methodName to show in stacktrace.\n        var result = method.apply(void 0, ['' + s].concat(args));\n\n        if (result === undefined || result === null) {\n          if (policyName == DEFAULT_POLICY_NAME) {\n            // These values mean that the input was rejected. This will cause\n            // a violation later, don't create types for them.\n            return result;\n          }\n\n          result = '';\n        }\n\n        var allowedValue = '' + result;\n        var o = freeze(create(policySpecificType));\n        privates(o)['v'] = allowedValue;\n        return o;\n      })[methodName];\n\n      return freeze(factory);\n    }\n\n    var policy = create(TrustedTypePolicy.prototype);\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = getOwnPropertyNames(createTypeMapping)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var name = _step3.value;\n        policy[name] = creator(createTypeMapping[name], name);\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n\n    defineProperty(policy, 'name', {\n      value: policyName,\n      writable: false,\n      configurable: false,\n      enumerable: true\n    });\n    return (\n      /** @type {!TrustedTypePolicy} */\n      freeze(policy)\n    );\n  }\n  /**\n   * Returns the name of the trusted type required for a given element\n   *   attribute.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} attribute The name of the attribute.\n   * @param {string=} elementNs Element namespace.\n   * @param {string=} attributeNs The attribute namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n\n\n  function getAttributeType(tagName, attribute) {\n    var elementNs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var attributeNs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    var canonicalAttr = toLowerCase.apply(String(attribute));\n    return getTypeInternal_(tagName, 'attributes', canonicalAttr, elementNs, attributeNs) || null;\n  }\n  /**\n   * Returns a type name from a type map.\n   * @param {string} tag A tag name.\n   * @param {string} container 'attributes' or 'properties'\n   * @param {string} name The attribute / property name.\n   * @param {string=} elNs Element namespace.\n   * @param {string=} attrNs Attribute namespace.\n   * @return {string|undefined}\n   * @private\n   */\n\n\n  function getTypeInternal_(tag, container, name) {\n    var elNs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n    var attrNs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n    var canonicalTag = toUpperCase.apply(String(tag));\n    var ns = attrNs ? attrNs : elNs;\n\n    if (!ns) {\n      ns = HTML_NS;\n    }\n\n    var map = hasOwnProperty.apply(TYPE_MAP, [ns]) ? TYPE_MAP[ns] : null;\n\n    if (!map) {\n      return;\n    }\n\n    if (hasOwnProperty.apply(map, [canonicalTag]) && map[canonicalTag] && hasOwnProperty.apply(map[canonicalTag][container], [name]) && map[canonicalTag][container][name]) {\n      return map[canonicalTag][container][name];\n    }\n\n    if (hasOwnProperty.apply(map, ['*']) && hasOwnProperty.apply(map['*'][container], [name]) && map['*'][container][name]) {\n      return map['*'][container][name];\n    }\n  }\n  /**\n   * Returns the name of the trusted type required for a given element property.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} property The property.\n   * @param {string=} elementNs Element namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n\n\n  function getPropertyType(tagName, property) {\n    var elementNs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    // TODO: Support namespaces.\n    return getTypeInternal_(tagName, 'properties', String(property), elementNs) || null;\n  }\n  /**\n   * Returns the type map-like object, that resolves a name of a type for a\n   * given tag + attribute / property in a given namespace.\n   * The keys of the map are uppercase tag names. Map entry has mappings between\n   * a lowercase attribute name / case-sensitive property name and a name of the\n   * type that is required for that attribute / property.\n   * Example entry for 'IMG': {\"attributes\": {\"src\": \"TrustedHTML\"}}\n   * @param {string=} namespaceUri The namespace URI (will use the current\n   *   document namespace URI if omitted).\n   * @return {TrustedTypesTypeMap}\n   */\n\n\n  function getTypeMapping() {\n    var namespaceUri = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    if (!namespaceUri) {\n      try {\n        namespaceUri = document.documentElement.namespaceURI;\n      } catch (e) {\n        namespaceUri = HTML_NS;\n      }\n    }\n    /**\n     * @template T\n     * @private\n     * @param {T} o\n     * @return {T}\n     */\n\n\n    function deepClone(o) {\n      return JSON.parse(JSON.stringify(o));\n    }\n\n    var map = TYPE_MAP[namespaceUri];\n\n    if (!map) {\n      return {};\n    }\n\n    return deepClone(map);\n  }\n  /**\n   * Returns all configured policy names (even for non-exposed policies).\n   * @return {!Array<string>}\n   */\n\n\n  function getPolicyNames() {\n    // TODO(msamuel): Should we sort policyNames to avoid leaking or\n    // encouraging dependency on the order in which policy names are\n    // registered?  I think JavaScript builtin sorts are efficient for\n    // almost-sorted lists so the amortized cost is close to O(n).\n    return policyNames.slice();\n  }\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n\n\n  function createPolicy(name, policy) {\n    var pName = '' + name; // Assert it's a string\n\n    if (enforceNameWhitelist && allowedNames.indexOf(pName) === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (enforceNameWhitelist && policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    } // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n\n\n    policyNames.push(pName); // Only copy own properties of names present in createTypeMapping.\n\n    var innerPolicy = create(null);\n\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = getOwnPropertyNames(policy)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var key = _step4.value;\n\n          if (createFunctionAllowed.call(createTypeMapping, key)) {\n            innerPolicy[key] = policy[key];\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('trustedTypes.createPolicy ' + pName + ' was given an empty policy');\n    }\n\n    freeze(innerPolicy);\n    var wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (pName === DEFAULT_POLICY_NAME) {\n      defaultPolicy = wrappedPolicy;\n    }\n\n    return wrappedPolicy;\n  }\n  /**\n   * Applies the policy name whitelist.\n   * @param {!Array<string>} allowedPolicyNames\n   */\n\n\n  function setAllowedPolicyNames(allowedPolicyNames) {\n    if (allowedPolicyNames.indexOf('*') !== -1) {\n      // Any policy name is allowed.\n      enforceNameWhitelist = false;\n    } else {\n      enforceNameWhitelist = true;\n      allowedNames.length = 0;\n      forEach.call(allowedPolicyNames, function (el) {\n        push.call(allowedNames, '' + el);\n      });\n    }\n  }\n  /**\n   * Returns the default policy, or null if it was not created.\n   * @return {TrustedTypePolicy}\n   */\n\n\n  function getDefaultPolicy() {\n    return defaultPolicy;\n  }\n  /**\n   * Resets the default policy.\n   */\n\n\n  function resetDefaultPolicy() {\n    defaultPolicy = null;\n    policyNames.splice(policyNames.indexOf(DEFAULT_POLICY_NAME), 1);\n  }\n\n  var api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy: createPolicy,\n    getPolicyNames: getPolicyNames,\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isURL: isTrustedTypeChecker(TrustedURL),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n    getAttributeType: getAttributeType,\n    getPropertyType: getPropertyType,\n    getTypeMapping: getTypeMapping,\n    emptyHTML: emptyHTML,\n    defaultPolicy: defaultPolicy,\n    // Just to make the compiler happy, this is overridden below.\n    TrustedHTML: TrustedHTML,\n    TrustedURL: TrustedURL,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript\n  });\n  defineProperty(api, 'defaultPolicy', {\n    get: getDefaultPolicy,\n    set: function set() {}\n  });\n  return {\n    trustedTypes: freeze(api),\n    setAllowedPolicyNames: setAllowedPolicyNames,\n    getDefaultPolicy: getDefaultPolicy,\n    resetDefaultPolicy: resetDefaultPolicy\n  };\n};\n\nvar _trustedTypesBuilderT = trustedTypesBuilderTestOnly(),\n    trustedTypes = _trustedTypesBuilderT.trustedTypes,\n    setAllowedPolicyNames = _trustedTypesBuilderT.setAllowedPolicyNames,\n    getDefaultPolicy = _trustedTypesBuilderT.getDefaultPolicy,\n    resetDefaultPolicy = _trustedTypesBuilderT.resetDefaultPolicy;\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n\nvar tt = trustedTypes;\n/**\n * Sets up the public Trusted Types API in the global object.\n */\n\nfunction setupPolyfill() {\n  // We use array accessors to make sure Closure compiler will not alter the\n  // names of the properties..\n  // we setup the polyfill only in browser environment.\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var rootProperty = 'trustedTypes'; // Convert old window.TrustedTypes to window.trustedTypes.\n\n  if (window['TrustedTypes'] && typeof window[rootProperty] === 'undefined') {\n    window[rootProperty] = Object.freeze(window['TrustedTypes']);\n  }\n\n  if (typeof window[rootProperty] !== 'undefined') {\n    return;\n  }\n\n  var publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    'isHTML': tt.isHTML,\n    'isURL': tt.isURL,\n    'isScriptURL': tt.isScriptURL,\n    'isScript': tt.isScript,\n    'createPolicy': tt.createPolicy,\n    'getPolicyNames': tt.getPolicyNames,\n    'getAttributeType': tt.getAttributeType,\n    'getPropertyType': tt.getPropertyType,\n    'getTypeMapping': tt.getTypeMapping,\n    'emptyHTML': tt.emptyHTML,\n    '_isPolyfill_': true\n  });\n  Object.defineProperty(publicApi, 'defaultPolicy', Object.getOwnPropertyDescriptor(tt, 'defaultPolicy') || {});\n  window[rootProperty] = Object.freeze(publicApi);\n  window['TrustedHTML'] = tt.TrustedHTML;\n  window['TrustedURL'] = tt.TrustedURL;\n  window['TrustedScriptURL'] = tt.TrustedScriptURL;\n  window['TrustedScript'] = tt.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\nsetupPolyfill();\nexport default tt;","map":{"version":3,"sources":["/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/trusted-types/build/esm/trustedtypes.api_only.js"],"names":["unsafeAttributeEventHandlers","getUnsafeAttributeEventHandlers","window","eventHandlers","name","HTMLElement","prototype","slice","push","isBrowser","rejectInputFn","s","TypeError","rejectInputDefaultPolicyFn","String","toLowerCase","toUpperCase","HTML_NS","XLINK_NS","SVG_NS","TrustedTypePolicy","TrustedTypePolicyFactory","DEFAULT_POLICY_NAME","trustedTypesBuilderTestOnly","assign","Object","create","defineProperty","freeze","getOwnPropertyNames","getPrototypeOf","ObjectPrototype","hasOwnProperty","Array","forEach","creatorSymbol","Symbol","privates","obj","v","privateMap","get","undefined","set","selfContained","collection","proto","Error","key","value","WeakMap","policyNames","allowedNames","defaultPolicy","enforceNameWhitelist","TrustedType","policyName","enumerable","lockdownTrustedType","SubClass","canonName","TrustedURL","TrustedScriptURL","TrustedHTML","TrustedScript","emptyHTML","TYPE_MAP","ATTR_PROPERTY_MAP","HTMLIFrameElement","keys","tag","attr","createTypeMapping","createFunctionAllowed","isTrustedTypeChecker","type","has","wrapPolicy","innerPolicy","creator","Ctor","methodName","method","policySpecificType","factory","args","result","allowedValue","o","policy","writable","configurable","getAttributeType","tagName","attribute","elementNs","attributeNs","canonicalAttr","apply","getTypeInternal_","container","elNs","attrNs","canonicalTag","ns","map","getPropertyType","property","getTypeMapping","namespaceUri","document","documentElement","namespaceURI","e","deepClone","JSON","parse","stringify","getPolicyNames","createPolicy","pName","indexOf","call","console","warn","wrappedPolicy","setAllowedPolicyNames","allowedPolicyNames","length","el","getDefaultPolicy","resetDefaultPolicy","splice","api","isHTML","isURL","isScriptURL","isScript","trustedTypes","tt","setupPolyfill","rootProperty","publicApi","getOwnPropertyDescriptor"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\n// TODO check attributes in safari, remove legacy safe handlers\nconst unsafeAttributeEventHandlers = [\n  'onabort',\n  'onactivate',\n  'onactivateinvisible',\n  'onafterprint',\n  'onafterupdate',\n  'onanimationcancel',\n  'onanimationend',\n  'onanimationiteration',\n  'onanimationstart',\n  'onariarequest',\n  'onauxclick',\n  'onbeforeactivate',\n  'onbeforecopy',\n  'onbeforecut',\n  'onbeforedeactivate',\n  'onbeforeeditfocus',\n  'onbeforepaste',\n  'onbeforeprint',\n  'onbeforeunload',\n  'onbegin',\n  'onblur',\n  'onbounce',\n  'oncancel',\n  'oncanplay',\n  'oncanplaythrough',\n  'oncellchange',\n  'onchange',\n  'onclick',\n  'onclose',\n  'oncommand',\n  'oncontextmenu',\n  'oncontrolselect',\n  'oncopy',\n  'oncuechange',\n  'oncut',\n  'ondataavailable',\n  'ondatasetchanged',\n  'ondatasetcomplete',\n  'ondblclick',\n  'ondeactivate',\n  'ondrag',\n  'ondragdrop',\n  'ondragend',\n  'ondragenter',\n  'ondragexit',\n  'ondragleave',\n  'ondragover',\n  'ondragstart',\n  'ondrop',\n  'ondurationchange',\n  'onemptied',\n  'onend',\n  'onended',\n  'onerror',\n  'onerrorupdate',\n  'onexit',\n  'onfilterchange',\n  'onfinish',\n  'onfocus',\n  'onfocusin',\n  'onfocusout',\n  'onformdata',\n  'onfullscreenchange',\n  'onfullscreenerror',\n  'ongotpointercapture',\n  'onhelp',\n  'oninput',\n  'oninvalid',\n  'onkeydown',\n  'onkeypress',\n  'onkeyup',\n  'onlayoutcomplete',\n  'onload',\n  'onloadeddata',\n  'onloadedmetadata',\n  'onloadend',\n  'onloadstart',\n  'onlosecapture',\n  'onlostpointercapture',\n  'onmediacomplete',\n  'onmediaerror',\n  'onmessage',\n  'onmousedown',\n  'onmouseenter',\n  'onmouseleave',\n  'onmousemove',\n  'onmouseout',\n  'onmouseover',\n  'onmouseup',\n  'onmousewheel',\n  'onmove',\n  'onmoveend',\n  'onmovestart',\n  'onmozfullscreenchange',\n  'onmozfullscreenerror',\n  'onmscontentzoom',\n  'onmsgesturechange',\n  'onmsgesturedoubletap',\n  'onmsgestureend',\n  'onmsgesturehold',\n  'onmsgesturestart',\n  'onmsgesturetap',\n  'onmsgotpointercapture',\n  'onmsinertiastart',\n  'onmslostpointercapture',\n  'onmsmanipulationstatechanged',\n  'onmspointercancel',\n  'onmspointerdown',\n  'onmspointerenter',\n  'onmspointerleave',\n  'onmspointermove',\n  'onmspointerout',\n  'onmspointerover',\n  'onmspointerup',\n  'onoffline',\n  'ononline',\n  'onoutofsync',\n  'onoverscroll',\n  'onpaste',\n  'onpause',\n  'onplay',\n  'onplaying',\n  'onpointercancel',\n  'onpointerdown',\n  'onpointerenter',\n  'onpointerleave',\n  'onpointermove',\n  'onpointerout',\n  'onpointerover',\n  'onpointerrawupdate',\n  'onpointerup',\n  'onprogress',\n  'onpropertychange',\n  'onratechange',\n  'onreadystatechange',\n  'onrepeat',\n  'onreset',\n  'onresize',\n  'onresizeend',\n  'onresizestart',\n  'onresume',\n  'onreverse',\n  'onrowdelete',\n  'onrowenter',\n  'onrowexit',\n  'onrowinserted',\n  'onscroll',\n  'onscrollend',\n  'onsearch',\n  'onseek',\n  'onseeked',\n  'onseeking',\n  'onselect',\n  'onselectionchange',\n  'onselectstart',\n  'onshow',\n  'onstalled',\n  'onstart',\n  'onstop',\n  'onstorage',\n  'onsubmit',\n  'onsuspend',\n  'onsynchrestored',\n  'ontimeerror',\n  'ontimeupdate',\n  'ontoggle',\n  'ontrackchange',\n  'ontransitioncancel',\n  'ontransitionend',\n  'ontransitionrun',\n  'ontransitionstart',\n  'onunload',\n  'onurlflip',\n  'onvolumechange',\n  'onwaiting',\n  'onwebkitanimationend',\n  'onwebkitanimationiteration',\n  'onwebkitanimationstart',\n  'onwebkitfullscreenchange',\n  'onwebkitfullscreenerror',\n  'onwebkittransitionend',\n  'onwheel',\n];\n\n/**\n * Returns an array of all event handlers. Some of the event handlers may be\n * supported only in some browsers.\n *\n * For every event type that the browser supports, SVG supports that as an event\n * attribute, following the same requirements as for HTML event attributes.\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/Events\n *\n * @return {!Array<string>}\n */\nfunction getUnsafeAttributeEventHandlers() {\n  if (typeof window !== 'undefined') {\n    const eventHandlers = [];\n    for (const name in HTMLElement.prototype) {\n      if (name.slice(0, 2) === 'on') {\n        eventHandlers.push(name);\n      }\n    }\n    return eventHandlers;\n  } else {\n    return unsafeAttributeEventHandlers;\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst isBrowser = typeof window !== 'undefined';\n\nconst rejectInputFn = (s) => {\n  throw new TypeError('undefined conversion');\n};\n\nconst rejectInputDefaultPolicyFn = (s) => null;\n\nconst {toLowerCase, toUpperCase} = String.prototype;\n\nconst HTML_NS = 'http://www.w3.org/1999/xhtml';\nconst XLINK_NS = 'http://www.w3.org/1999/xlink';\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\n/**\n * @constructor\n * @property {!function(string):TrustedHTML} createHTML\n * @property {!function(string):TrustedURL} createURL\n * @property {!function(string):TrustedScriptURL} createScriptURL\n * @property {!function(string):TrustedScript} createScript\n * @property {!string} name\n */\nconst TrustedTypePolicy = function() {\n  throw new TypeError('Illegal constructor');\n};\n\n/**\n * @constructor\n */\nconst TrustedTypePolicyFactory = function() {\n  throw new TypeError('Illegal constructor');\n};\n/* eslint-enable no-unused-vars */\n\nconst DEFAULT_POLICY_NAME = 'default';\n\n\nconst trustedTypesBuilderTestOnly = function() {\n  // Capture common names early.\n  const {\n    assign, create, defineProperty, freeze, getOwnPropertyNames,\n    getPrototypeOf, prototype: ObjectPrototype,\n  } = Object;\n\n  const {hasOwnProperty} = ObjectPrototype;\n\n  const {\n    forEach, push,\n  } = Array.prototype;\n\n  const creatorSymbol = Symbol();\n\n  /**\n   * Getter for the privateMap.\n   * @param  {Object} obj Key of the privateMap\n   * @return {Object<string, string>} Private storage.\n   */\n  const privates = function(obj) {\n    let v = privateMap.get(obj);\n    if (v === undefined) {\n      v = create(null); // initialize the private storage.\n      privateMap.set(obj, v);\n    }\n    return v;\n  };\n\n  /**\n   * Called before attacker-controlled code on an internal collections,\n   * copies prototype members onto the instance directly, so that later\n   * changes to prototypes cannot expose collection internals.\n   * @param {!T} collection\n   * @return {!T} collection\n   * @template T\n   */\n  function selfContained(collection) {\n    const proto = getPrototypeOf(collection);\n    if (proto == null || getPrototypeOf(proto) !== ObjectPrototype) {\n      throw new Error(); // Loop below is insufficient.\n    }\n    for (const key of getOwnPropertyNames(proto)) {\n      defineProperty(collection, key, {value: collection[key]});\n    }\n    return collection;\n  }\n\n  /**\n   * Map for private properties of Trusted Types object.\n   * This is so that the access to the type constructor does not give\n   * the ability to create typed values.\n   * @type {WeakMap}\n   */\n  const privateMap = selfContained(new WeakMap());\n\n  /**\n   * List of all configured policy names.\n   * @type {Array<string>}\n   */\n  const policyNames = selfContained([]);\n\n  /**\n   * Allowed policy namess for policy names.\n   * @type {Array<string>}\n   */\n  const allowedNames = selfContained([]);\n\n  /**\n   * A reference to a default policy, if created.\n   * @type {TrustedTypePolicy}\n   */\n  let defaultPolicy = null;\n\n  /**\n   * Whether to enforce allowedNames in createPolicy().\n   * @type {boolean}\n   */\n  let enforceNameWhitelist = false;\n\n\n  /**\n   * A value that is trusted to have certain security-relevant properties\n   * because the sources of such values are controlled.\n   */\n  class TrustedType {\n    /**\n     * Constructor for TrustedType. Only allowed to be called from within a\n     * policy.\n     * @param {symbol} s creatorSymbol\n     * @param {string} policyName The name of the policy this object was\n     *   created by.\n     */\n    constructor(s, policyName) {\n      // TODO: Figure out if symbol is needed, if the value is in privateMap.\n      if (s !== creatorSymbol) {\n        throw new Error('cannot call the constructor');\n      }\n      defineProperty(this, 'policyName',\n          {value: '' + policyName, enumerable: true});\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    toString() {\n      return privates(this)['v'];\n    }\n\n    /**\n     * Returns the wrapped string value of the object.\n     * @return {string}\n     * @override\n     */\n    valueOf() {\n      return privates(this)['v'];\n    }\n  }\n\n  /**\n   * @param {function(new:TrustedType, symbol, string)} SubClass\n   * @param {string} canonName The class name which should be independent of\n   *     any renaming pass and which is relied upon by the enforcer and for\n   *     native type interop.\n   */\n  function lockdownTrustedType(SubClass, canonName) {\n    freeze(SubClass.prototype);\n    delete SubClass.name;\n    defineProperty(SubClass, 'name', {value: canonName});\n  }\n\n  /**\n   * Trusted URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedURL, 'TrustedURL');\n\n  /**\n   * Trusted Script URL object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScriptURL extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScriptURL, 'TrustedScriptURL');\n\n  /**\n   * Trusted HTML object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedHTML extends TrustedType {\n  }\n  lockdownTrustedType(TrustedHTML, 'TrustedHTML');\n\n  /**\n   * Trusted Script object wrapping a string that can only be created from a\n   * TT policy.\n   */\n  class TrustedScript extends TrustedType {\n  }\n  lockdownTrustedType(TrustedScript, 'TrustedScript');\n\n  lockdownTrustedType(TrustedType, 'TrustedType');\n\n  // Common constants.\n  const emptyHTML = freeze(create(new TrustedHTML(creatorSymbol, '')));\n  privates(emptyHTML)['v'] = '';\n\n  /**\n   * A map of attribute / property names to allowed types\n   * for known namespaces.\n   * @type {!Object<string,!TrustedTypesTypeMap>}\n   * @export\n   */\n  const TYPE_MAP = {\n    [HTML_NS]: {\n      // TODO(koto): Figure out what to to with <link>\n      'A': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'AREA': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'BASE': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n      },\n      'BUTTON': {\n        'attributes': {\n          'formaction': TrustedURL.name,\n        },\n      },\n      'EMBED': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n        },\n      },\n      'FORM': {\n        'attributes': {\n          'action': TrustedURL.name,\n        },\n      },\n      'FRAME': {\n        'attributes': {\n          'src': TrustedURL.name,\n        },\n      },\n      'IFRAME': {\n        'attributes': {\n          'src': TrustedURL.name,\n          'srcdoc': TrustedHTML.name,\n        },\n      },\n      'INPUT': {\n        'attributes': {\n          'formaction': TrustedURL.name,\n        },\n      },\n      'OBJECT': {\n        'attributes': {\n          'data': TrustedScriptURL.name,\n          'codebase': TrustedScriptURL.name,\n        },\n      },\n      // TODO(koto): Figure out what to do with portals.\n      'SCRIPT': {\n        'attributes': {\n          'src': TrustedScriptURL.name,\n          'text': TrustedScript.name,\n        },\n        'properties': {\n          'innerText': TrustedScript.name,\n          'textContent': TrustedScript.name,\n          'text': TrustedScript.name,\n        },\n      },\n      '*': {\n        'attributes': {},\n        'properties': {\n          'innerHTML': TrustedHTML.name,\n          'outerHTML': TrustedHTML.name,\n        },\n      },\n    },\n    [XLINK_NS]: {\n      '*': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n        'properties': {},\n      },\n    },\n    [SVG_NS]: {\n      '*': {\n        'attributes': {\n          'href': TrustedURL.name,\n        },\n        'properties': {},\n      },\n    },\n  };\n\n  /**\n   * A map of element property to HTML attribute names.\n   * @type {!Object<string, string>}\n   */\n  const ATTR_PROPERTY_MAP = {\n    'codebase': 'codeBase',\n    'formaction': 'formAction',\n  };\n\n  // Edge doesn't support srcdoc.\n  if (isBrowser && !('srcdoc' in HTMLIFrameElement.prototype)) {\n    delete TYPE_MAP[HTML_NS]['IFRAME']['attributes']['srcdoc'];\n  }\n\n  // in HTML, clone attributes into properties.\n  for (const tag of Object.keys(TYPE_MAP[HTML_NS])) {\n    if (!TYPE_MAP[HTML_NS][tag]['properties']) {\n      TYPE_MAP[HTML_NS][tag]['properties'] = {};\n    }\n    for (const attr of Object.keys(TYPE_MAP[HTML_NS][tag]['attributes'])) {\n      TYPE_MAP[HTML_NS][tag]['properties'][\n          ATTR_PROPERTY_MAP[attr] ? ATTR_PROPERTY_MAP[attr] : attr\n      ] = TYPE_MAP[HTML_NS][tag]['attributes'][attr];\n    }\n  }\n\n  // Add inline event handlers attribute names.\n  for (const name of getUnsafeAttributeEventHandlers()) {\n    TYPE_MAP[HTML_NS]['*']['attributes'][name] = 'TrustedScript';\n    TYPE_MAP[SVG_NS]['*']['attributes'][name] = 'TrustedScript';\n  }\n\n  /**\n   * @type {!Object<string,!Function>}\n   */\n  const createTypeMapping = {\n    'createHTML': TrustedHTML,\n    'createScriptURL': TrustedScriptURL,\n    'createURL': TrustedURL,\n    'createScript': TrustedScript,\n  };\n\n  const createFunctionAllowed = createTypeMapping.hasOwnProperty;\n\n  /**\n   * Function generating a type checker.\n   * @template T\n   * @param  {T} type The type to check against.\n   * @return {function(*):boolean}\n   */\n  function isTrustedTypeChecker(type) {\n    return (obj) => (obj instanceof type) && privateMap.has(obj);\n  }\n\n  /**\n   * Wraps a user-defined policy rules with TT constructor\n   * @param  {string} policyName The policy name\n   * @param  {TrustedTypesInnerPolicy} innerPolicy InnerPolicy\n   * @return {!TrustedTypePolicy} Frozen policy object\n   */\n  function wrapPolicy(policyName, innerPolicy) {\n    /**\n     * @template T\n     * @param {function(new:T, symbol, string)} Ctor a trusted type constructor\n     * @param {string} methodName the policy factory method name\n     * @return {function(string):!T} a factory that produces instances of Ctor.\n     */\n    function creator(Ctor, methodName) {\n      // This causes thisValue to be null when called below.\n      const method = innerPolicy[methodName] || (\n        policyName == DEFAULT_POLICY_NAME ?\n            rejectInputDefaultPolicyFn : rejectInputFn\n      );\n      const policySpecificType = freeze(new Ctor(creatorSymbol, policyName));\n      const factory = {\n        [methodName](s, ...args) {\n          // Trick to get methodName to show in stacktrace.\n          let result = method('' + s, ...args);\n          if (result === undefined || result === null) {\n            if (policyName == DEFAULT_POLICY_NAME) {\n              // These values mean that the input was rejected. This will cause\n              // a violation later, don't create types for them.\n              return result;\n            }\n            result = '';\n          }\n          const allowedValue = '' + result;\n          const o = freeze(create(policySpecificType));\n          privates(o)['v'] = allowedValue;\n          return o;\n        },\n      }[methodName];\n      return freeze(factory);\n    }\n\n    const policy = create(TrustedTypePolicy.prototype);\n\n    for (const name of getOwnPropertyNames(createTypeMapping)) {\n      policy[name] = creator(createTypeMapping[name], name);\n    }\n    defineProperty(policy, 'name', {\n      value: policyName,\n      writable: false,\n      configurable: false,\n      enumerable: true,\n    });\n\n    return /** @type {!TrustedTypePolicy} */ (freeze(policy));\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element\n   *   attribute.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} attribute The name of the attribute.\n   * @param {string=} elementNs Element namespace.\n   * @param {string=} attributeNs The attribute namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getAttributeType(tagName, attribute, elementNs = '',\n      attributeNs = '') {\n    const canonicalAttr = toLowerCase.apply(String(attribute));\n    return getTypeInternal_(tagName, 'attributes', canonicalAttr,\n        elementNs, attributeNs) || null;\n  }\n\n  /**\n   * Returns a type name from a type map.\n   * @param {string} tag A tag name.\n   * @param {string} container 'attributes' or 'properties'\n   * @param {string} name The attribute / property name.\n   * @param {string=} elNs Element namespace.\n   * @param {string=} attrNs Attribute namespace.\n   * @return {string|undefined}\n   * @private\n   */\n  function getTypeInternal_(tag, container, name, elNs = '', attrNs = '') {\n    const canonicalTag = toUpperCase.apply(String(tag));\n\n    let ns = attrNs ? attrNs : elNs;\n    if (!ns) {\n      ns = HTML_NS;\n    }\n    const map = hasOwnProperty.apply(TYPE_MAP, [ns]) ? TYPE_MAP[ns] : null;\n    if (!map) {\n      return;\n    }\n    if (hasOwnProperty.apply(map, [canonicalTag]) &&\n        map[canonicalTag] &&\n        hasOwnProperty.apply(map[canonicalTag][container], [name]) &&\n        map[canonicalTag][container][name]) {\n      return map[canonicalTag][container][name];\n    }\n\n    if (hasOwnProperty.apply(map, ['*']) &&\n        hasOwnProperty.apply(map['*'][container], [name]) &&\n        map['*'][container][name]) {\n      return map['*'][container][name];\n    }\n  }\n\n  /**\n   * Returns the name of the trusted type required for a given element property.\n   * @param {string} tagName The name of the tag of the element.\n   * @param {string} property The property.\n   * @param {string=} elementNs Element namespace.\n   * @return {string?} Required type name or null, if a Trusted\n   *   Type is not required.\n   */\n  function getPropertyType(tagName, property, elementNs = '') {\n    // TODO: Support namespaces.\n    return getTypeInternal_(\n        tagName, 'properties', String(property), elementNs) || null;\n  }\n\n  /**\n   * Returns the type map-like object, that resolves a name of a type for a\n   * given tag + attribute / property in a given namespace.\n   * The keys of the map are uppercase tag names. Map entry has mappings between\n   * a lowercase attribute name / case-sensitive property name and a name of the\n   * type that is required for that attribute / property.\n   * Example entry for 'IMG': {\"attributes\": {\"src\": \"TrustedHTML\"}}\n   * @param {string=} namespaceUri The namespace URI (will use the current\n   *   document namespace URI if omitted).\n   * @return {TrustedTypesTypeMap}\n   */\n  function getTypeMapping(namespaceUri = '') {\n    if (!namespaceUri) {\n      try {\n        namespaceUri = document.documentElement.namespaceURI;\n      } catch (e) {\n        namespaceUri = HTML_NS;\n      }\n    }\n    /**\n     * @template T\n     * @private\n     * @param {T} o\n     * @return {T}\n     */\n    function deepClone(o) {\n      return JSON.parse(JSON.stringify(o));\n    }\n    const map = TYPE_MAP[namespaceUri];\n    if (!map) {\n      return {};\n    }\n    return deepClone(map);\n  }\n\n  /**\n   * Returns all configured policy names (even for non-exposed policies).\n   * @return {!Array<string>}\n   */\n  function getPolicyNames() {\n    // TODO(msamuel): Should we sort policyNames to avoid leaking or\n    // encouraging dependency on the order in which policy names are\n    // registered?  I think JavaScript builtin sorts are efficient for\n    // almost-sorted lists so the amortized cost is close to O(n).\n    return policyNames.slice();\n  }\n\n  /**\n   * Creates a TT policy.\n   *\n   * Returns a frozen object representing a policy - a collection of functions\n   * that may create TT objects based on the user-provided rules specified\n   * in the policy object.\n   *\n   * @param  {string} name A unique name of the policy.\n   * @param  {TrustedTypesInnerPolicy} policy Policy rules object.\n   * @return {TrustedTypePolicy} The policy that may create TT objects\n   *   according to the policy rules.\n   */\n  function createPolicy(name, policy) {\n    const pName = '' + name; // Assert it's a string\n\n    if (enforceNameWhitelist && allowedNames.indexOf(pName) === -1) {\n      throw new TypeError('Policy ' + pName + ' disallowed.');\n    }\n\n    if (enforceNameWhitelist && policyNames.indexOf(pName) !== -1) {\n      throw new TypeError('Policy ' + pName + ' exists.');\n    }\n    // Register the name early so that if policy getters unwisely calls\n    // across protection domains to code that reenters this function,\n    // policy author still has rights to the name.\n    policyNames.push(pName);\n\n    // Only copy own properties of names present in createTypeMapping.\n    const innerPolicy = create(null);\n    if (policy && typeof policy === 'object') {\n      // Treat non-objects as empty policies.\n      for (const key of getOwnPropertyNames(policy)) {\n        if (createFunctionAllowed.call(createTypeMapping, key)) {\n          innerPolicy[key] = policy[key];\n        }\n      }\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('trustedTypes.createPolicy ' + pName +\n          ' was given an empty policy');\n    }\n    freeze(innerPolicy);\n\n    const wrappedPolicy = wrapPolicy(pName, innerPolicy);\n\n    if (pName === DEFAULT_POLICY_NAME) {\n      defaultPolicy = wrappedPolicy;\n    }\n\n    return wrappedPolicy;\n  }\n\n  /**\n   * Applies the policy name whitelist.\n   * @param {!Array<string>} allowedPolicyNames\n   */\n  function setAllowedPolicyNames(allowedPolicyNames) {\n    if (allowedPolicyNames.indexOf('*') !== -1) { // Any policy name is allowed.\n      enforceNameWhitelist = false;\n    } else {\n      enforceNameWhitelist = true;\n      allowedNames.length = 0;\n      forEach.call(allowedPolicyNames, (el) => {\n        push.call(allowedNames, '' + el);\n      });\n    }\n  }\n\n  /**\n   * Returns the default policy, or null if it was not created.\n   * @return {TrustedTypePolicy}\n   */\n  function getDefaultPolicy() {\n    return defaultPolicy;\n  }\n\n  /**\n   * Resets the default policy.\n   */\n  function resetDefaultPolicy() {\n    defaultPolicy = null;\n    policyNames.splice(policyNames.indexOf(DEFAULT_POLICY_NAME), 1);\n  }\n\n  const api = create(TrustedTypePolicyFactory.prototype);\n  assign(api, {\n    // The main function to create policies.\n    createPolicy,\n\n    getPolicyNames,\n\n    // Type checkers, also validating the object was initialized through a\n    // policy.\n    isHTML: isTrustedTypeChecker(TrustedHTML),\n    isURL: isTrustedTypeChecker(TrustedURL),\n    isScriptURL: isTrustedTypeChecker(TrustedScriptURL),\n    isScript: isTrustedTypeChecker(TrustedScript),\n\n    getAttributeType,\n    getPropertyType,\n    getTypeMapping,\n    emptyHTML,\n    defaultPolicy, // Just to make the compiler happy, this is overridden below.\n\n    TrustedHTML: TrustedHTML,\n    TrustedURL: TrustedURL,\n    TrustedScriptURL: TrustedScriptURL,\n    TrustedScript: TrustedScript,\n  });\n\n  defineProperty(api, 'defaultPolicy', {\n    get: getDefaultPolicy,\n    set: () => {},\n  });\n\n  return {\n    trustedTypes: freeze(api),\n    setAllowedPolicyNames,\n    getDefaultPolicy,\n    resetDefaultPolicy,\n  };\n};\n\n\nconst {\n  trustedTypes,\n  setAllowedPolicyNames,\n  getDefaultPolicy,\n  resetDefaultPolicy,\n} = trustedTypesBuilderTestOnly();\n\n/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n */\n\nconst tt = trustedTypes;\n\n/**\n * Sets up the public Trusted Types API in the global object.\n */\nfunction setupPolyfill() {\n  // We use array accessors to make sure Closure compiler will not alter the\n  // names of the properties..\n\n  // we setup the polyfill only in browser environment.\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const rootProperty = 'trustedTypes';\n\n  // Convert old window.TrustedTypes to window.trustedTypes.\n  if (window['TrustedTypes'] && typeof window[rootProperty] === 'undefined') {\n    window[rootProperty] = Object.freeze(window['TrustedTypes']);\n  }\n\n  if (typeof window[rootProperty] !== 'undefined') {\n    return;\n  }\n\n  const publicApi = Object.create(TrustedTypePolicyFactory.prototype);\n  Object.assign(publicApi, {\n    'isHTML': tt.isHTML,\n    'isURL': tt.isURL,\n    'isScriptURL': tt.isScriptURL,\n    'isScript': tt.isScript,\n    'createPolicy': tt.createPolicy,\n    'getPolicyNames': tt.getPolicyNames,\n    'getAttributeType': tt.getAttributeType,\n    'getPropertyType': tt.getPropertyType,\n    'getTypeMapping': tt.getTypeMapping,\n    'emptyHTML': tt.emptyHTML,\n    '_isPolyfill_': true,\n  });\n  Object.defineProperty(\n      publicApi,\n      'defaultPolicy',\n      Object.getOwnPropertyDescriptor(tt, 'defaultPolicy') || {});\n\n  window[rootProperty] = Object.freeze(publicApi);\n\n  window['TrustedHTML'] = tt.TrustedHTML;\n  window['TrustedURL'] = tt.TrustedURL;\n  window['TrustedScriptURL'] = tt.TrustedScriptURL;\n  window['TrustedScript'] = tt.TrustedScript;\n  window['TrustedTypePolicy'] = TrustedTypePolicy;\n  window['TrustedTypePolicyFactory'] = TrustedTypePolicyFactory;\n}\n\nsetupPolyfill();\n\nexport default tt;\n"]},"metadata":{},"sourceType":"module"}