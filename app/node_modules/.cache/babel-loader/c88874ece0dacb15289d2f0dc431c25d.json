{"ast":null,"code":"import _slicedToArray from\"/Users/myaaaicey/Documents/playground/test-trusted-types/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{BrowserRouter as Router}from'react-router-dom';import'./App.css';import{getPolicy}from'./utils';var App=function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),hrefText=_useState2[0],setHrefText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),href=_useState4[0],setHref=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),untrustedHrefText=_useState6[0],setUntrustedHrefText=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),untrustedHref=_useState8[0],setUntrustedHref=_useState8[1];return React.createElement(Router,null,React.createElement(\"div\",{className:\"App\"},React.createElement(\"div\",null,React.createElement(\"a\",{href:getPolicy().createURL('/xss2')},React.createElement(\"button\",null,\"Xss 2\"))),React.createElement(\"div\",null,React.createElement(\"p\",null,href&&React.createElement(\"a\",{href:getPolicy().createURL(href)},\"Link with trusted href\"),React.createElement(\"input\",{type:\"text\",value:hrefText,onChange:function onChange(e){return setHrefText(e.target.value);}}),React.createElement(\"button\",{onClick:function onClick(){return setHref(hrefText);}},\"Set href\")),React.createElement(\"p\",null,untrustedHref&&React.createElement(\"a\",{href:untrustedHref},\"Link with NON trusted href\"),React.createElement(\"input\",{type:\"text\",value:untrustedHrefText,onChange:function onChange(e){return setUntrustedHrefText(e.target.value);}}),React.createElement(\"button\",{onClick:function onClick(){return setUntrustedHref(untrustedHrefText);}},\"Set untrusted href\")))));};export default App;","map":{"version":3,"sources":["/Users/myaaaicey/Documents/playground/test-trusted-types/app/src/App.tsx"],"names":["React","useState","BrowserRouter","Router","getPolicy","App","hrefText","setHrefText","href","setHref","untrustedHrefText","setUntrustedHrefText","untrustedHref","setUntrustedHref","createURL","e","target","value"],"mappings":"mLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,KAA8C,kBAA9C,CACA,MAAO,WAAP,CACA,OAASC,SAAT,KAA0B,SAA1B,CAEA,GAAMC,CAAAA,GAAa,CAAG,QAAhBA,CAAAA,GAAgB,EAAM,eACMJ,QAAQ,CAAC,EAAD,CADd,wCACnBK,QADmB,eACTC,WADS,8BAEFN,QAAQ,CAAC,EAAD,CAFN,yCAEnBO,IAFmB,eAEbC,OAFa,8BAGwBR,QAAQ,CAAC,EAAD,CAHhC,yCAGnBS,iBAHmB,eAGAC,oBAHA,8BAIgBV,QAAQ,CAAC,EAAD,CAJxB,yCAInBW,aAJmB,eAIJC,gBAJI,eAM1B,MACE,qBAAC,MAAD,MACE,2BAAK,SAAS,CAAC,KAAf,EACE,+BAEE,yBAAG,IAAI,CAAET,SAAS,GAAGU,SAAZ,CAAsB,OAAtB,CAAT,EACE,0CADF,CAFF,CADF,CAaE,+BACE,6BACGN,IAAI,EAAI,yBAAG,IAAI,CAAEJ,SAAS,GAAGU,SAAZ,CAAsBN,IAAtB,CAAT,2BADX,CAEE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,QAFT,CAGE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAHZ,EAFF,CAOE,8BAAQ,OAAO,CAAE,yBAAMR,CAAAA,OAAO,CAACH,QAAD,CAAb,EAAjB,aAPF,CADF,CAUE,6BACGM,aAAa,EAAI,yBAAG,IAAI,CAAEA,aAAT,+BADpB,CAEE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,iBAFT,CAGE,QAAQ,CAAE,kBAACK,CAAD,QAAOJ,CAAAA,oBAAoB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3B,EAHZ,EAFF,CAOE,8BAAQ,OAAO,CAAE,yBAAMJ,CAAAA,gBAAgB,CAACH,iBAAD,CAAtB,EAAjB,uBAPF,CAVF,CAbF,CADF,CADF,CAsCD,CA5CD,CA8CA,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport './App.css';\nimport { getPolicy } from './utils';\n\nconst App: React.FC = () => {\n  const [hrefText, setHrefText] = useState('');\n  const [href, setHref] = useState('');\n  const [untrustedHrefText, setUntrustedHrefText] = useState(\"\");\n  const [untrustedHref, setUntrustedHref] = useState(\"\");\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n          {/* <img src={'x'} onError={e => {e.preventDefault(); alert(2);}} alt='hoge' /> */}\n          <a href={getPolicy().createURL('/xss2')}>\n            <button>Xss 2</button>\n          </a>\n          {/* <a href={getPolicy().createURL('/xss-hacky3?html=<img%20src=%27x%27%20onerror=\"alert(1)\"')}>\n            <button>Xss 3</button>\n          </a>\n          <a href={getPolicy().createURL('/xss-hacky4?html=<img%20src=%27x%27%20onerror=\"alert(1)\"')}>\n            <button>Xss 4</button>\n          </a> */}\n        </div>\n        <div>\n          <p>\n            {href && <a href={getPolicy().createURL(href)}>Link with trusted href</a>}\n            <input\n              type=\"text\"\n              value={hrefText}\n              onChange={(e) => setHrefText(e.target.value)}\n            />\n            <button onClick={() => setHref(hrefText)}>Set href</button>\n          </p>\n          <p>\n            {untrustedHref && <a href={untrustedHref}>Link with NON trusted href</a>}\n            <input\n              type=\"text\"\n              value={untrustedHrefText}\n              onChange={(e) => setUntrustedHrefText(e.target.value)}\n            />\n            <button onClick={() => setUntrustedHref(untrustedHrefText)}>Set untrusted href</button>\n          </p>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}